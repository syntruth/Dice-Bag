#!/usr/bin/env ruby

require 'optparse'
# require 'dicebag'
require_relative '../lib/dicebag'

# Define the Dicebag CLI app
class DiceBagCLI
  attr_reader :params

  def self.call
    new.perform
  end

  def initialize
    @params = { notes: false }
  end

  def opts
    @opts ||= OptionParser.new do |args|
      args.banner = 'Usage: dicebag [-n | --notes] <dice string>'

      args.on '-n', '--notes', 'Display any notes for the roll.'

      args.on_head('-h', 'Displays this help.') do
        puts args

        exit
      end
    end
  end

  def perform
    abort(opts.help) if ARGV.empty?

    nonopts = opts.parse! into: params

    dstr   = nonopts.join(' ')
    roll   = DiceBag::Roll.new dstr
    result = roll.roll

    puts result

    puts_notes(roll) if params[:notes]
  rescue StandardError => err
    abort err.to_s
  end

  def puts_notes(roll)
    nstr = roll.notes_to_s

    return if nstr.empty?

    puts nstr
  end
end

DiceBagCLI.call
